version: '3.8'

services:
  frontend:
    container_name: frontend-vuejs
    build:
      context: ./front-end
      dockerfile: Dockerfile 
    ports:
      - 80:80
    networks:
      - webapp-network
    depends_on:
      - backend
    links:
      - database

  backend:
    container_name: backend-python
    build:
      context: ./back-end
      dockerfile: Dockerfile
    volumes:
      - ./back-end:/app
    ports:
      - 8000:8000
    networks:
      - webapp-network
    depends_on:
      - database
    links:
      - database

  database:
    container_name: mongodb
    image: mongo
    volumes:
      - ./data:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=dbAPIDashboard
      - MONGO_INITDB_ROOT_PASSWORD=dbAPIDashboard
      - MONGO_INITDB_DATABASE=api_dashboard_application
    networks:
      - webapp-network
networks:
  webapp-network:
    driver: bridge

# version: '3'

# services:
#   frontend:
#     image: tranhuynhtanphat/frontend-image:v1
#     container_name: frontend-vuejs
#     ports:
#       - 80:80
#     restart: unless-stopped
#     networks:
#       - webapp-network
#     depends_on:
#       - backend
#     links:
#       - database

#   backend:
#     image: tranhuynhtanphat/backend-image:v1
#     container_name: backend-python
#     ports:
#       - 8000:8000
#     restart: unless-stopped
#     networks:
#       - webapp-network
#     depends_on:
#       - database
#     links:
#       - database
  
#   database:
#     container_name: mongodb
#     image: mongo
#     volumes:
#       - ./data:/data/db
#     ports:
#       - "27017:27017"
#     environment:
#       - MONGO_INITDB_ROOT_USERNAME=dbAPIDashboard
#       - MONGO_INITDB_ROOT_PASSWORD=dbAPIDashboard
#       - MONGO_INITDB_DATABASE=api_dashboard_application
#     networks:
#       - webapp-network
# networks:
#   webapp-network:
#     driver: bridge