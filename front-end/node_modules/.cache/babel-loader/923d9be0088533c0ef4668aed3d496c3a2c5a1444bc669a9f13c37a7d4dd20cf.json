{"ast":null,"code":"import axios from \"axios\";\nimport { REGISTER } from \"@/axios\";\nexport default {\n  name: \"AlertDialog\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      status: 0\n    };\n  },\n  props: {\n    show: Boolean\n  },\n  methods: {\n    async handleAdd() {\n      if (this.email != \"\" && this.password != \"\") {\n        await axios.post(REGISTER, {\n          email: this.email,\n          password: this.password,\n          status: this.status\n        }).then(res => {\n          if (res.status == 200) {\n            this.$emit(\"load-user\");\n            this.$emit(\"close\");\n          }\n        }).catch(ex => {\n          if (ex.response.status == 409) {\n            document.getElementById(\"messError\").innerHTML = \"Email already existed!\";\n          }\n        });\n      } else if (this.email == \"\") {\n        document.getElementById(\"messError\").innerHTML = \"Enter email please!\";\n      } else if (this.password == \"\") {\n        document.getElementById(\"messError\").innerHTML = \"Enter password please!\";\n      }\n    },\n    handleCancel() {\n      this.$emit(\"close\");\n    }\n  }\n};","map":{"version":3,"names":["axios","REGISTER","name","data","email","password","status","props","show","Boolean","methods","handleAdd","post","then","res","$emit","catch","ex","response","document","getElementById","innerHTML","handleCancel"],"sources":["src/components/views/Home/AlertDialog.vue"],"sourcesContent":["<template>\n  <Transition name=\"modal\">\n    <div v-if=\"show\" class=\"modal-mask\">\n      <div class=\"modal-wrapper\">\n        <div class=\"modal-container\">\n          <div class=\"modal-header\">\n            <label for=\"title\" class=\"label-header\">Register account</label>\n          </div>\n\n          <div class=\"modal-body\">\n            <label for=\"email\" class=\"label\">Email:</label>\n            <input type=\"email\" v-model=\"email\" placeholder=\"Enter email\" />\n            <label for=\"password\" class=\"label\">Password:</label>\n            <input\n              type=\"password\"\n              v-model=\"password\"\n              placeholder=\"Enter password\"\n            />\n            <label for=\"status\" class=\"label\">Status:</label>\n            <input\n              type=\"number\"\n              v-model=\"status\"\n              :placeholder=\"this.status\"\n              oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength); if(this.value!=1 && this.value!=0) this.value=''\"\n              maxlength=\"1\"\n            />\n            <span id=\"messError\"></span>\n          </div>\n\n          <div class=\"modal-footer-alert\">\n            <slot name=\"footer-alert\">\n              <button class=\"modal-right-button\" @click=\"handleAdd\">Add</button>\n              <button class=\"modal-left-button\" @click=\"handleCancel\">\n                Cancel\n              </button>\n            </slot>\n          </div>\n        </div>\n      </div>\n    </div>\n  </Transition>\n</template>\n<script>\nimport axios from \"axios\";\nimport { REGISTER } from \"@/axios\";\nexport default {\n  name: \"AlertDialog\",\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      status: 0,\n    };\n  },\n  props: {\n    show: Boolean,\n  },\n  methods: {\n    async handleAdd() {\n      if (this.email != \"\" && this.password != \"\") {\n        await axios\n          .post(REGISTER, {\n            email: this.email,\n            password: this.password,\n            status: this.status,\n          })\n          .then((res) => {\n            if (res.status == 200) {\n              this.$emit(\"load-user\");\n              this.$emit(\"close\");\n            }\n          })\n          .catch((ex) => {\n            if (ex.response.status == 409) {\n              document.getElementById(\"messError\").innerHTML =\n                \"Email already existed!\";\n            }\n          });\n      } else if (this.email == \"\") {\n        document.getElementById(\"messError\").innerHTML = \"Enter email please!\";\n      } else if (this.password == \"\") {\n        document.getElementById(\"messError\").innerHTML =\n          \"Enter password please!\";\n      }\n    },\n    handleCancel() {\n      this.$emit(\"close\");\n    },\n  },\n};\n</script>\n\n<style>\n.modal-mask {\n  position: fixed;\n  z-index: 9998;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: table;\n  transition: opacity 0.3s ease;\n\n  padding: 20px;\n}\n\n.modal-wrapper {\n  display: table-cell;\n  vertical-align: middle;\n}\n\n.modal-container {\n  width: 400px;\n  height: auto;\n  margin: 0px auto;\n  padding: 50px 30px;\n  background-color: #fff;\n  border-radius: 15px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33);\n  transition: all 0.3s ease;\n}\n\n.modal-header .label-header {\n  margin-top: 0;\n  color: #3d5554;\n  font-size: 18px;\n  font-weight: 500;\n}\n\n.modal-body {\n  margin: 20px 0;\n}\n\n.modal-body .label {\n  margin-top: 0;\n  color: #3d5554;\n  font-size: 14px;\n  font-weight: 500;\n}\n\n.modal-body input {\n  width: 100%;\n  margin-top: 5px;\n  margin-bottom: 10px;\n  padding: 10px 10px;\n  border-radius: 10px;\n  box-shadow: rgb(204, 219, 232) 3px 3px 6px 0px inset,\n    rgba(255, 255, 255, 0.5) -3px -3px 6px 1px inset;\n}\n\n.modal-body #messError {\n  color: red;\n}\n\ninput:hover {\n  border-color: #3d5554;\n}\n\n.modal-right-button {\n  float: right;\n  border-radius: 10px;\n  background-color: rgb(0, 100, 154);\n  padding: 10px 20px;\n\n  color: #fff;\n}\n\n.modal-left-button {\n  float: left;\n  border-radius: 10px;\n  background-color: rgba(0, 100, 154, 0.194);\n  padding: 10px 20px;\n\n  color: #000;\n}\n\n/*\n * The following styles are auto-applied to elements with\n * transition=\"modal\" when their visibility is toggled\n * by Vue.js.\n *\n * You can easily play with the modal transition by editing\n * these styles.\n */\n\n.modal-enter-from {\n  opacity: 0;\n}\n\n.modal-leave-to {\n  opacity: 0;\n}\n\n.modal-enter-from .modal-container,\n.modal-leave-to .modal-container {\n  -webkit-transform: scale(1.1);\n  transform: scale(1.1);\n}\n\n/* Chrome, Safari, Edge, Opera */\ninput::-webkit-outer-spin-button,\ninput::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n\n/* Firefox */\ninput[type=\"number\"] {\n  -moz-appearance: textfield;\n}\n</style>"],"mappings":"AA2CA,OAAAA,KAAA;AACA,SAAAC,QAAA;AACA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;MACAC,MAAA;IACA;EACA;EACAC,KAAA;IACAC,IAAA,EAAAC;EACA;EACAC,OAAA;IACA,MAAAC,UAAA;MACA,SAAAP,KAAA,eAAAC,QAAA;QACA,MAAAL,KAAA,CACAY,IAAA,CAAAX,QAAA;UACAG,KAAA,OAAAA,KAAA;UACAC,QAAA,OAAAA,QAAA;UACAC,MAAA,OAAAA;QACA,GACAO,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAR,MAAA;YACA,KAAAS,KAAA;YACA,KAAAA,KAAA;UACA;QACA,GACAC,KAAA,CAAAC,EAAA;UACA,IAAAA,EAAA,CAAAC,QAAA,CAAAZ,MAAA;YACAa,QAAA,CAAAC,cAAA,cAAAC,SAAA,GACA;UACA;QACA;MACA,gBAAAjB,KAAA;QACAe,QAAA,CAAAC,cAAA,cAAAC,SAAA;MACA,gBAAAhB,QAAA;QACAc,QAAA,CAAAC,cAAA,cAAAC,SAAA,GACA;MACA;IACA;IACAC,aAAA;MACA,KAAAP,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}