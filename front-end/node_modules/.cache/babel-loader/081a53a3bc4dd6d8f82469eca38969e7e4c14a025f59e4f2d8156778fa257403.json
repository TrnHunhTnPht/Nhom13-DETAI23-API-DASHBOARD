{"ast":null,"code":"import { Line as LineChart } from \"vue-chartjs\";\nimport { Chart as ChartJS, Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale, PointElement } from \"chart.js\";\nChartJS.register(Title, Tooltip, Legend, LineElement, CategoryScale, LinearScale, PointElement);\nexport default {\n  name: \"PredictStatistic\",\n  components: {\n    \"line-chart\": LineChart\n  },\n  props: {\n    chartId: {\n      type: String,\n      default: \"line-chart\"\n    },\n    datasetIdKey: {\n      type: String,\n      default: \"label\"\n    },\n    width: {\n      type: Number,\n      default: 400\n    },\n    height: {\n      type: Number,\n      default: 400\n    },\n    cssClasses: {\n      default: \"\",\n      type: String\n    },\n    styles: {\n      type: Object,\n      default: () => {}\n    },\n    plugins: {\n      type: Array,\n      default: () => []\n    }\n  },\n  data() {\n    return {};\n  },\n  // async mounted() {\n  //     const { data } = await axios.get(CHART_TIMES_CHECK)\n\n  //     this.chartDataBar.datasets[0].data = data.count\n\n  //     console.log(this.chartDataBar)\n  // },\n  computed: {\n    chartData() {\n      return {\n        labels: this.$store.state.chartDashboard.predicts,\n        datasets: [{\n          label: \"Predict_result\",\n          backgroundColor: \"rgb(222, 49, 99)\",\n          borderColor: \"rgb(222, 49, 99)\",\n          borderWidth: 2,\n          borderRadius: 3,\n          hoverBackgroundColor: \"rgb(222, 49, 99)\",\n          hoverBorderColor: \"rgb(222, 49, 99)\",\n          pointBorderColor: \"white\",\n          pointBorderWidth: 0,\n          pointRadius: 2,\n          data: this.$store.state.chartDashboard.predict_values\n        }]\n      };\n    },\n    chartOptions() {\n      return {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            labels: {\n              // This more specific font property overrides the global property\n              font: {\n                size: 14\n              }\n            }\n          }\n        }\n      };\n    }\n  }\n};","map":{"version":3,"names":["Line","LineChart","Chart","ChartJS","Title","Tooltip","Legend","LineElement","CategoryScale","LinearScale","PointElement","register","name","components","props","chartId","type","String","default","datasetIdKey","width","Number","height","cssClasses","styles","Object","plugins","Array","data","computed","chartData","labels","$store","state","chartDashboard","predicts","datasets","label","backgroundColor","borderColor","borderWidth","borderRadius","hoverBackgroundColor","hoverBorderColor","pointBorderColor","pointBorderWidth","pointRadius","predict_values","chartOptions","responsive","maintainAspectRatio","legend","font","size"],"sources":["src/components/views/Home/charts/PredictStatistic.vue"],"sourcesContent":["<template>\n    <line-chart\n      :options=\"chartOptions\"\n      :data=\"chartData\"\n      :chart-id=\"chartId\"\n      :dataset-id-key=\"datasetIdKey\"\n      :plugins=\"plugins\"\n      :css-classes=\"cssClasses\"\n      :styles=\"styles\"\n      :width=\"width\"\n      :height=\"height\"\n    />\n  </template>\n      \n    <script>\n  import { Line as LineChart } from \"vue-chartjs\";\n  \n  import {\n    Chart as ChartJS,\n    Title,\n    Tooltip,\n    Legend,\n    LineElement,\n    CategoryScale,\n    LinearScale,\n    PointElement,\n  } from \"chart.js\";\n  \n  ChartJS.register(\n    Title,\n    Tooltip,\n    Legend,\n    LineElement,\n    CategoryScale,\n    LinearScale,\n    PointElement\n  );\n  \n  export default {\n    name: \"PredictStatistic\",\n    components: {\n      \"line-chart\": LineChart,\n    },\n    props: {\n      chartId: {\n        type: String,\n        default: \"line-chart\",\n      },\n      datasetIdKey: {\n        type: String,\n        default: \"label\",\n      },\n      width: {\n        type: Number,\n        default: 400,\n      },\n      height: {\n        type: Number,\n        default: 400,\n      },\n      cssClasses: {\n        default: \"\",\n        type: String,\n      },\n      styles: {\n        type: Object,\n        default: () => {},\n      },\n      plugins: {\n        type: Array,\n        default: () => [],\n      },\n    },\n    data() {\n      return {};\n    },\n    // async mounted() {\n    //     const { data } = await axios.get(CHART_TIMES_CHECK)\n  \n    //     this.chartDataBar.datasets[0].data = data.count\n  \n    //     console.log(this.chartDataBar)\n    // },\n    computed: {\n      chartData() {\n        return {\n          labels: this.$store.state.chartDashboard.predicts,\n          datasets: [\n            {\n              label: \"Predict_result\",\n              backgroundColor: \"rgb(222, 49, 99)\",\n              borderColor: \"rgb(222, 49, 99)\",\n              borderWidth: 2,\n              borderRadius: 3,\n              hoverBackgroundColor: \"rgb(222, 49, 99)\",\n              hoverBorderColor: \"rgb(222, 49, 99)\",\n              pointBorderColor: \"white\",\n              pointBorderWidth: 0,\n              pointRadius: 2,\n              data: this.$store.state.chartDashboard.predict_values,\n            },\n          ],\n        };\n      },\n      chartOptions() {\n        return {\n          responsive: true,\n          maintainAspectRatio: false,\n          plugins: {\n            legend: {\n              labels: {\n                // This more specific font property overrides the global property\n                font: {\n                  size: 14,\n                },\n              },\n            },\n          },\n        };\n      },\n    },\n  };\n  </script>\n      "],"mappings":"AAeA,SAAAA,IAAA,IAAAC,SAAA;AAEA,SACAC,KAAA,IAAAC,OAAA,EACAC,KAAA,EACAC,OAAA,EACAC,MAAA,EACAC,WAAA,EACAC,aAAA,EACAC,WAAA,EACAC,YAAA,QACA;AAEAP,OAAA,CAAAQ,QAAA,CACAP,KAAA,EACAC,OAAA,EACAC,MAAA,EACAC,WAAA,EACAC,aAAA,EACAC,WAAA,EACAC,YAAA,CACA;AAEA;EACAE,IAAA;EACAC,UAAA;IACA,cAAAZ;EACA;EACAa,KAAA;IACAC,OAAA;MACAC,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAC,YAAA;MACAH,IAAA,EAAAC,MAAA;MACAC,OAAA;IACA;IACAE,KAAA;MACAJ,IAAA,EAAAK,MAAA;MACAH,OAAA;IACA;IACAI,MAAA;MACAN,IAAA,EAAAK,MAAA;MACAH,OAAA;IACA;IACAK,UAAA;MACAL,OAAA;MACAF,IAAA,EAAAC;IACA;IACAO,MAAA;MACAR,IAAA,EAAAS,MAAA;MACAP,OAAA,EAAAA,CAAA;IACA;IACAQ,OAAA;MACAV,IAAA,EAAAW,KAAA;MACAT,OAAA,EAAAA,CAAA;IACA;EACA;EACAU,KAAA;IACA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACAC,QAAA;IACAC,UAAA;MACA;QACAC,MAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAC,cAAA,CAAAC,QAAA;QACAC,QAAA,GACA;UACAC,KAAA;UACAC,eAAA;UACAC,WAAA;UACAC,WAAA;UACAC,YAAA;UACAC,oBAAA;UACAC,gBAAA;UACAC,gBAAA;UACAC,gBAAA;UACAC,WAAA;UACAlB,IAAA,OAAAI,MAAA,CAAAC,KAAA,CAAAC,cAAA,CAAAa;QACA;MAEA;IACA;IACAC,aAAA;MACA;QACAC,UAAA;QACAC,mBAAA;QACAxB,OAAA;UACAyB,MAAA;YACApB,MAAA;cACA;cACAqB,IAAA;gBACAC,IAAA;cACA;YACA;UACA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}