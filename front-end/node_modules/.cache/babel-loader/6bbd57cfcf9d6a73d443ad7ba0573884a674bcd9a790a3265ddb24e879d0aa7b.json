{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nimport { UPDATE_DELETE_USER } from \"../../../axios\";\nimport Navbar from \"../../AppNav.vue\";\nimport { GET_USER } from \"@/axios\";\nimport AlertDialog from \"@/components/views/Home/AlertDialog.vue\";\nexport default {\n  name: \"TablePage\",\n  data() {\n    return {\n      listUsers: [],\n      pageSize: 10,\n      currentPage: 1,\n      currentUser: \"Undefined\",\n      show: false,\n      sortBy: \"id\",\n      sortOrder: 1,\n      keySearch: \"\",\n      json_fields: {\n        ID: \"id\",\n        Email: \"email\",\n        Status: \"status\",\n        Accessed_at: {\n          field: \"accessed_at\",\n          callback: value => {\n            if (value.date != \"NaN\") return value.date + \" at \" + value.time;\n          }\n        },\n        Created_at: {\n          field: \"created_at\",\n          callback: value => {\n            return value.date + \" at \" + value.time;\n          }\n        }\n      },\n      json_meta: [[{\n        key: \"charset\",\n        value: \"utf-8\"\n      }]]\n    };\n  },\n  components: {\n    Navbar,\n    AlertDialog\n  },\n  mounted() {\n    // localStorage.getItem(\"role\") != 0\n    if (localStorage.getItem(\"id\") == null || localStorage.getItem(\"access_token\") == null) {\n      this.$router.push({\n        name: \"Signin\"\n      });\n    }\n  },\n  async created() {\n    this.$store.commit(\"isTable\");\n    this.loadUser();\n  },\n  methods: {\n    nextPage() {\n      if (this.currentPage * this.pageSize < this.listUsers.length) this.currentPage++;\n    },\n    prevPage() {\n      if (this.currentPage > 1) this.currentPage--;\n    },\n    sort(sortBy) {\n      if (this.sortBy === sortBy) {\n        this.sortOrder = -this.sortOrder;\n      } else {\n        this.sortBy = sortBy;\n      }\n    },\n    handleClick(item) {\n      if (item == this.currentUser) {\n        this.currentUser = \"Undefined\";\n      } else {\n        this.currentUser = item;\n      }\n      // document.getElementById(\"inputStatus\").value = \"\";\n    },\n\n    async handleUpdate() {\n      var ipEmail = document.getElementById(\"inputEmail\").value;\n      var ipStatus = document.getElementById(\"inputStatus\").value;\n      if (ipEmail != \"\") {\n        this.currentUser[\"email\"] = ipEmail;\n      }\n      if (ipStatus != \"\") {\n        this.currentUser[\"status\"] = ipStatus;\n      }\n      await axios.put(UPDATE_DELETE_USER + \"/\" + this.currentUser[\"id\"], {\n        email: this.currentUser[\"email\"],\n        status: this.currentUser[\"status\"]\n      }).then(res => {\n        if (res.status == 200) {\n          document.getElementById(\"inputStatus\").value = \"\";\n          this.currentUser = \"Undefined\";\n        }\n      });\n    },\n    async handleDelete(id) {\n      await axios.delete(UPDATE_DELETE_USER + \"/\" + id).then(this.currentUser = \"Undefined\").catch(ex => console.log(ex));\n      await axios.get(GET_USER).then(res => {\n        if (res.status == 200) {\n          this.listUsers = res.data.data;\n        }\n      });\n    },\n    handleAddAlert() {\n      this.show = true;\n    },\n    close() {\n      this.show = false;\n    },\n    async loadUser() {\n      await axios.get(GET_USER).then(res => {\n        if (res.status == 200) {\n          this.listUsers = res.data.data;\n        }\n      });\n    }\n  },\n  computed: {\n    sortListUsers() {\n      return [...this.listUsers].sort((a, b) => {\n        if (a[this.sortBy] >= b[this.sortBy]) {\n          return this.sortOrder;\n        }\n        return -this.sortOrder;\n      }).filter(row => {\n        if (this.keySearch != \"\") {\n          return row.id.includes(this.keySearch) || row.email.includes(this.keySearch);\n        }\n        return true;\n      }).filter((row, index) => {\n        let start = (this.currentPage - 1) * this.pageSize;\n        let end = this.currentPage * this.pageSize;\n        if (index >= start && index < end) return true;\n      });\n    }\n  },\n  watch: {\n    keySearch() {\n      this.sortListUsers;\n    }\n  }\n};","map":{"version":3,"names":["axios","UPDATE_DELETE_USER","Navbar","GET_USER","AlertDialog","name","data","listUsers","pageSize","currentPage","currentUser","show","sortBy","sortOrder","keySearch","json_fields","ID","Email","Status","Accessed_at","field","callback","value","date","time","Created_at","json_meta","key","components","mounted","localStorage","getItem","$router","push","created","$store","commit","loadUser","methods","nextPage","length","prevPage","sort","handleClick","item","handleUpdate","ipEmail","document","getElementById","ipStatus","put","email","status","then","res","handleDelete","id","delete","catch","ex","console","log","get","handleAddAlert","close","computed","sortListUsers","a","b","filter","row","includes","index","start","end","watch"],"sources":["src/components/views/Home/TablePage.vue"],"sourcesContent":["<template>\n  <div>\n    <Navbar />\n    <div class=\"table-main\">\n      <div class=\"table-main-top\">\n        <div class=\"table-main-top-left\">\n          <AlertDialog :show=\"this.show\" @close=\"close\" @load-user=\"loadUser\" />\n          <download-excel\n            class=\"btn btn-default\"\n            :data=\"listUsers\"\n            :fields=\"json_fields\"\n            worksheet=\"Users\"\n            name=\"users.xls\"\n            style=\"width: fit-content; float: left\"\n          >\n            <div class=\"h1\" style=\"margin: 5px 0 15px 20px; width: fit-content\">\n              <font-awesome-icon\n                icon=\"fa-solid fa-file-excel\"\n                style=\"color: #026600\"\n                size=\"2xl\"\n                class=\"btn-export\"\n              />\n              List User\n            </div>\n          </download-excel>\n          <div\n            class=\"form-input\"\n            style=\"width: 250px; float: right; padding: 5px 50px 15px 0\"\n          >\n            <input type=\"text\" placeholder=\"Enter key\" v-model=\"keySearch\" />\n          </div>\n          <table>\n            <thead>\n              <th @click=\"sort('id')\" style=\"padding-left: 20px\">\n                <font-awesome-icon\n                  icon=\"fa-solid fa-sort\"\n                  style=\"color: #3d555426\"\n                />\n                ID\n              </th>\n              <th @click=\"sort('email')\">\n                <font-awesome-icon\n                  icon=\"fa-solid fa-sort\"\n                  style=\"color: #3d555426\"\n                />\n                Email\n              </th>\n              <th>Status</th>\n              <th>Role</th>\n              <th>Accessed_at</th>\n              <th>Created_at</th>\n              <th\n                style=\"\n                  text-align: center;\n                  vertical-align: middle;\n                  padding-right: 10px;\n                \"\n              >\n                <button\n                  style=\"\n                    color: #3d5554;\n                    padding: 5px 5px;\n                    background-color: #3d55544c;\n                    border-radius: 10px;\n                  \"\n                  @click=\"handleAddAlert\"\n                >\n                  + Add User\n                </button>\n              </th>\n            </thead>\n            <tbody>\n              <tr v-for=\"item in sortListUsers\" :key=\"item.id\">\n                <td @click=\"handleClick(item)\">\n                  <p class=\"content-start\">{{ item[\"id\"] }}</p>\n                </td>\n                <td @click=\"handleClick(item)\">\n                  <p>{{ item[\"email\"] }}</p>\n                </td>\n                <td @click=\"handleClick(item)\">\n                  <p>{{ item[\"status\"] }}</p>\n                </td>\n                <td @click=\"handleClick(item)\">\n                  <p>{{ item[\"role\"] }}</p>\n                </td>\n                <td @click=\"handleClick(item)\">\n                  <p>\n                    {{ item[\"accessed_at\"][\"date\"] }} at\n                    {{ item[\"accessed_at\"][\"time\"] }}\n                  </p>\n                </td>\n                <td @click=\"handleClick(item)\">\n                  <p>\n                    {{ item[\"created_at\"][\"date\"] }} at\n                    {{ item[\"created_at\"][\"time\"] }}\n                  </p>\n                </td>\n                <td\n                  style=\"\n                    text-align: center;\n                    vertical-align: middle;\n                    padding-right: 10px;\n                  \"\n                >\n                  <button\n                    @click.prevent=\"handleDelete(item['id'])\"\n                    style=\"padding: 0 10px\"\n                  >\n                    <font-awesome-icon\n                      icon=\"fa-solid fa-trash\"\n                      size=\"xl\"\n                      style=\"color: #ff0000\"\n                    />\n                  </button>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <div\n            class=\"footer-table\"\n            v-if=\"this.listUsers.length > this.pageSize\"\n          >\n            <button @click=\"prevPage\" v-if=\"this.currentPage != 1\">\n              <font-awesome-icon\n                icon=\"fa-solid fa-chevron-left\"\n                size=\"2xl\"\n                style=\"color: #3d5554\"\n              />\n            </button>\n            <p>{{ this.currentPage }}</p>\n            <button\n              @click=\"nextPage\"\n              v-if=\"this.currentPage * 10 < this.listUsers.length\"\n            >\n              <font-awesome-icon\n                icon=\"fa-solid fa-chevron-right\"\n                size=\"2xl\"\n                style=\"color: #3d5554\"\n              />\n            </button>\n          </div>\n          <div class=\"footer-table\"></div>\n        </div>\n        <div\n          class=\"table-main-top-right\"\n          v-if=\"this.currentUser != 'Undefined'\"\n        >\n          <div class=\"form-update\">\n            <div class=\"form-input\">\n              <label for=\"email\">Email:</label>\n              <input\n                type=\"email\"\n                :placeholder=\"this.currentUser['email']\"\n                name=\"email\"\n                id=\"inputEmail\"\n              />\n            </div>\n            <div class=\"form-input\">\n              <label for=\"status\">Status:</label>\n              <input\n                type=\"number\"\n                :placeholder=\"this.currentUser['status']\"\n                name=\"status\"\n                id=\"inputStatus\"\n                oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength); if(this.value!=1 && this.value!=0) this.value=''\"\n                maxlength=\"1\"\n              />\n            </div>\n            <button @click.prevent=\"handleUpdate\">Update</button>\n          </div>\n        </div>\n        <div class=\"table-main-top-rignt\" v-else>\n          <p class=\"note\">Click row to update user !</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport { UPDATE_DELETE_USER } from \"../../../axios\";\nimport Navbar from \"../../AppNav.vue\";\nimport { GET_USER } from \"@/axios\";\n\nimport AlertDialog from \"@/components/views/Home/AlertDialog.vue\";\n\nexport default {\n  name: \"TablePage\",\n  data() {\n    return {\n      listUsers: [],\n      pageSize: 10,\n      currentPage: 1,\n      currentUser: \"Undefined\",\n      show: false,\n      sortBy: \"id\",\n      sortOrder: 1,\n      keySearch: \"\",\n      json_fields: {\n        ID: \"id\",\n        Email: \"email\",\n        Status: \"status\",\n        Accessed_at: {\n          field: \"accessed_at\",\n          callback: (value) => {\n            if (value.date != \"NaN\") return value.date + \" at \" + value.time;\n          },\n        },\n        Created_at: {\n          field: \"created_at\",\n          callback: (value) => {\n            return value.date + \" at \" + value.time;\n          },\n        },\n      },\n      json_meta: [\n        [\n          {\n            key: \"charset\",\n            value: \"utf-8\",\n          },\n        ],\n      ],\n    };\n  },\n  components: {\n    Navbar,\n    AlertDialog,\n  },\n  mounted() {\n    // localStorage.getItem(\"role\") != 0\n    if (\n      localStorage.getItem(\"id\") == null ||\n      localStorage.getItem(\"access_token\") == null\n    ) {\n      this.$router.push({ name: \"Signin\" });\n    }\n  },\n  async created() {\n    this.$store.commit(\"isTable\");\n\n    this.loadUser();\n  },\n  methods: {\n    nextPage() {\n      if (this.currentPage * this.pageSize < this.listUsers.length)\n        this.currentPage++;\n    },\n    prevPage() {\n      if (this.currentPage > 1) this.currentPage--;\n    },\n    sort(sortBy) {\n      if (this.sortBy === sortBy) {\n        this.sortOrder = -this.sortOrder;\n      } else {\n        this.sortBy = sortBy;\n      }\n    },\n    handleClick(item) {\n      if (item == this.currentUser) {\n        this.currentUser = \"Undefined\";\n      } else {\n        this.currentUser = item;\n      }\n      // document.getElementById(\"inputStatus\").value = \"\";\n    },\n    async handleUpdate() {\n      var ipEmail = document.getElementById(\"inputEmail\").value;\n      var ipStatus = document.getElementById(\"inputStatus\").value;\n\n      if (ipEmail != \"\") {\n        this.currentUser[\"email\"] = ipEmail;\n      }\n      if (ipStatus != \"\") {\n        this.currentUser[\"status\"] = ipStatus;\n      }\n\n      await axios\n        .put(UPDATE_DELETE_USER + \"/\" + this.currentUser[\"id\"], {\n          email: this.currentUser[\"email\"],\n          status: this.currentUser[\"status\"],\n        })\n        .then((res) => {\n          if (res.status == 200) {\n            document.getElementById(\"inputStatus\").value = \"\";\n            this.currentUser = \"Undefined\";\n          }\n        });\n    },\n    async handleDelete(id) {\n      await axios\n        .delete(UPDATE_DELETE_USER + \"/\" + id)\n        .then((this.currentUser = \"Undefined\"))\n        .catch((ex) => console.log(ex));\n      await axios.get(GET_USER).then((res) => {\n        if (res.status == 200) {\n          this.listUsers = res.data.data;\n        }\n      });\n    },\n    handleAddAlert() {\n      this.show = true;\n    },\n    close() {\n      this.show = false;\n    },\n    async loadUser() {\n      await axios.get(GET_USER).then((res) => {\n        if (res.status == 200) {\n          this.listUsers = res.data.data;\n        }\n      });\n    },\n  },\n  computed: {\n    sortListUsers() {\n      return [...this.listUsers]\n        .sort((a, b) => {\n          if (a[this.sortBy] >= b[this.sortBy]) {\n            return this.sortOrder;\n          }\n          return -this.sortOrder;\n        })\n        .filter((row) => {\n          if (this.keySearch != \"\") {\n            return (\n              row.id.includes(this.keySearch) ||\n              row.email.includes(this.keySearch)\n            );\n          }\n          return true;\n        })\n        .filter((row, index) => {\n          let start = (this.currentPage - 1) * this.pageSize;\n          let end = this.currentPage * this.pageSize;\n\n          if (index >= start && index < end) return true;\n        });\n    },\n  },\n  watch: {\n    keySearch() {\n      this.sortListUsers;\n    },\n  },\n};\n</script>\n<style>\n@import url(\"../../../assets/css/nav-style.css\");\n@import url(\"../../../assets/css/table-style.css\");\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}